%h2#current_song=song_info(@current_song)
#buttons
	-if @player.paused?
		=link_to 'Play',play_player_path,{:class=>'button',:id=>'play_pause',:method=>:put}
	-else
		=link_to 'Pause',pause_player_path,{:class=>'button',:id=>'play_pause',:method=>:put}
	=link_to 'Stop',stop_player_path,{:class=>'button',:id=>'stop',:method=>:put}
	=link_to 'Previous',previous_player_path,{:class=>'button',:id=>'prev',:method=>:put}
	=link_to 'Next',next_player_path,{:class=>'button',:id=>'next',:method=>:put}
	=link_to 'Volume Up',volume_up_player_path,{:class=>'button',:id=>'volume_up',:method=>:put}
	=link_to 'Volume Down',volume_down_player_path,{:class=>'button',:id=>'volume_down',:method=>:put}
	#song_slider{:'data-max'=>@player.ping[:song_time],:'data-value'=>@player.ping[:time]}
	#debug
#tabs
	%ul
		%li
			%a{:href=>'#tab-1'} Playlist
		%li
			%a{:href=>'#tab-2'} Library
	#tab-1
		%h3 Current Playlist
		#playlist
			-@songs.each_with_index do |song,index|
				%p
					=link_to 'Play',play_player_path(:song=>index),{:class=>'button',:method=>:put}
					=song_info(song)
	#tab-2
		#library
			%a{:id=>'create_tree'}
				Create JavaScipt-based Tree
			=display_childrens(@library)